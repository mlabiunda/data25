{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f6ea55d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c681890a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"
     ]
    }
   ],
   "source": [
    "#arreglo de long 12 con todos ceros\n",
    "array_ceros = np.zeros(12)\n",
    "print(array_ceros)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e1531a0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.  0.  0.  0. 10.  0.  0.  0.  0.  0.]\n"
     ]
    }
   ],
   "source": [
    "#arreglo de long 10 y en la posicion 5 un 10\n",
    "array_nums = np.zeros(10)\n",
    "array_nums[4] = 10\n",
    "print(array_nums)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "bd6720fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33\n",
      " 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49]\n"
     ]
    }
   ],
   "source": [
    "#arreglo con todos los num enteros del 10 al 49\n",
    "array = np.arange(10,50)\n",
    "print(array)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "eeb50923",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0 1]\n",
      " [2 3]]\n"
     ]
    }
   ],
   "source": [
    "#arreglo 2d de shape (2,2) con los nums del 0 al 3\n",
    "array_2d = np.arange(4).reshape(2,2)\n",
    "print(array_2d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "62104b34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "crear array aleatorio de longitud 10\n",
      "[ 0.67692681 -0.68791313  0.45303531 -0.05649466  0.41514092  0.22857537\n",
      " -0.60467937 -0.57626711  0.7942056  -0.67198744]\n",
      "\n",
      "creacion de promedio\n",
      "-0.002945770217152788\n",
      "\n",
      "creacion de variacion\n",
      "0.3144439505183655\n"
     ]
    }
   ],
   "source": [
    "#arreglo de numeros aleatorios de long 100 y obtener media y variacion\n",
    "print('crear array aleatorio de longitud 10')\n",
    "array_random = np.random.randn(10)\n",
    "print(array_random)\n",
    "print()\n",
    "print('creacion de promedio')\n",
    "promedio = np.mean(array_random)\n",
    "print(promedio)\n",
    "print()\n",
    "print('creacion de variacion')\n",
    "variacion = np.var(array_random)\n",
    "print(variacion)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2b6f877d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4.0\n"
     ]
    }
   ],
   "source": [
    "#calculo de promedio con sum y len, len dice la cant de elementos q tiene el array\n",
    "array1 = np.array([1,2,3,4,10])\n",
    "promedio = np.sum(array1)/len(array1)\n",
    "print(promedio)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "cafcb19e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "creacion de la variacion de un array usando sum y mean\n",
      "10.0\n",
      "12.5\n"
     ]
    }
   ],
   "source": [
    "#calculo de variacion de un array usando sum y mean\n",
    "print(\"creacion de la variacion de un array usando sum y mean\")\n",
    "#varianza poblacional. se usa cuando tenés todos los datos posibles, como una población completa.\n",
    "array_var = np.array([1,2,3,4,10])\n",
    "#en mean calcula el promedio\n",
    "#se resta el promedio a cada elemento del array\n",
    "#se eleva al cuadrado la diferencia para que no haya negativos\n",
    "#se suma todos los numeros\n",
    "variacion = np.sum((array_var-np.mean(array_var))**2)/len(array_var)\n",
    "print(variacion)\n",
    "#varianza muestral. se usa cuando tenés una muestra y no toda la población. le restás 1 al denominador para corregir el sesgo.\n",
    "array_var = np.array([1,2,3,4,10])\n",
    "variacion = np.sum((array_var-np.mean(array_var))**2)/(len(array_var)-1)\n",
    "print(variacion)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5fd33805",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 1.64084654  0.22480078 -1.47712574 -0.76394439]\n"
     ]
    }
   ],
   "source": [
    "#creacion de array aleatorio\n",
    "array_rnd = np.random.randn(4)\n",
    "print(array_rnd)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
